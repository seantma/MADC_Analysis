q()
install.packages('devtools')
devtools::install_github('cwatson/brainGraph')
devtools::install_github('cwatson/brainGraph')
q()
devtools::install_github('cwatson/brainGraph')
install.packages("RGtk2", depen=T)
devtools::install_github('cwatson/brainGraph')
q()
library(RGtk2)
devtools::install_github('cwatson/brainGraph')
q()
install.packages('caret')
q()
q()
q()
install.packages(c("bindr", "bindrcpp", "brainGraph", "broom", "caret", "cluster", "curl", "devtools", "glmnet", "hms", "igraph", "lava", "lme4", "MASS", "Matrix", "mgcv", "nlme", "openssl", "pillar", "plogr", "psych", "Rcpp", "rlang", "rmarkdown", "rpart", "selectr", "stringi", "stringr", "tidyselect", "viridis", "withr", "xts", "yaml"))
q()
q()
q()
q()
data("ToothGrowth")
res <- ggpubr::desc_statby(ToothGrowth, measure.var = "len",
grps = c("dose", "supp"))
View(res)
View(ToothGrowth)
pandioc_version()
pandoc_version()
library(rmarkdown)
pandoc_version()
q()
install.packages(c("ade4", "callr", "cluster", "data.table", "DBI", "ddalpha", "dplyr", "foreign", "Formula", "ggExtra", "ggrepel", "ggsci", "ggthemes", "glmnet", "htmlwidgets", "httpuv", "kableExtra", "kernlab", "lme4", "lubridate", "MASS", "Matrix", "miniUI", "modelr", "nlme", "pillar", "prodlim", "psych", "quantmod", "R.oo", "Rcpp", "RcppArmadillo", "readxl", "robustbase", "selectr", "shiny", "slam", "sourcetools", "stringi", "stringr", "survival", "tidyr", "tseries", "yaml"))
q()
q()
install.packages(c("brainGraph", "cairoDevice", "caret", "CVST", "data.table", "ddalpha", "highr", "htmlTable", "kernlab", "later", "munsell", "mvtnorm", "openxlsx", "pillar", "purrr", "RcppArmadillo", "RcppRoll", "RGtk2", "rlang", "rmarkdown", "robustbase", "servr", "slam", "stringi", "tseries", "utf8", "zoo"))
q()
install.packages(c("ddalpha", "ggpubr", "gtools", "httpuv", "mgcv", "RcppArmadillo", "recipes", "reprex", "robustbase", "tm", "xfun"))
library("brainGraph", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
q()
install.packages(c("ddalpha", "mgcv", "RcppArmadillo", "robustbase"))
install.packages(c("mgcv", "RcppArmadillo", "robustbase"))
q()
q()
q()
q()
q()
devtools::install_github("AndreaCirilloAC/updateR")
updateR::updateR(admin_password = "mfamhse$$")
install.packages(as.vector(needed_packages))
q()
q()
library("RGtk2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:RGtk2", unload=TRUE)
remove.packages('RGtk2')
remove.packages('brainGraph')
packs = as.data.frame(installed.packages(.libPaths()[1]), stringsAsFactors = F)
View(packs)
q()
.libPaths()
tmp <- installed.packages()
setdiff(packs,tmp)
tmp <- as.data.frame(installed.packages(), stringsAsFactors = F)
setdiff(packs, tmp)
remove.packages()
remove.packages('updateR')
installed_old = as.data.frame(installed.packages(.libPaths()[1]), stringsAsFactors = F)
save(installed_old, file="installed_old.rda")
q()
installed_old <- load("installed_old.rda")
load("installed_old.rda")
nstalled_new = as.data.frame(installed.packages(.libPaths()[1]), stringsAsFactors = F)
installed_new = as.data.frame(installed.packages(.libPaths()[1]), stringsAsFactors = F)
missing <- setdiff(installed_old, installed_new)
View(installed_new)
View(installed_old)
View(installed_new)
View(installed_old)
View(missing)
tt <- setdiff(installed_new, installed_old)
tmp <- installed.packages()
ttt <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])
tt <- setdiff(installed_new$Package, installed_old$Package)
tt <- setdiff(as.vector(installed_new$Package), as.vector(installed_old$Package))
installed_new$Package
installed_old$Package
str(installed_new$Package)
str(as.vector(installed_new$Package))
installed_old$Package[1]
ttt <- setdiff(installed_old$Package, installed_new$Package)
install.packages(ttt)
View(installed_old)
q()
load("installed_old.rda")
installed_new = as.data.frame(installed.packages(.libPaths()[1]), stringsAsFactors = F)
missing <- setdiff(installed_old$Package, installed_new$Package)
install.packages(missing)
q()
q()
# R code to merge CBF ROI extracts and visualize
#
# Sean Ma
# Oct 2018
#
rm(list=ls())
setwd('~/Dropbox/DrD_Ext/')
# file list from matching csvs
roi_files <- list.files(path = ".", pattern = "^ROI_extract")
roi_files
# extract out only CBF filenames
# inspired by https://stackoverflow.com/questions/6109882/regex-match-all-characters-between-two-strings
# look behind: `(?<=)` and look ahead (?=)
fname <- stringr::str_extract(roi_files, "(?<=cbfmap_)(.*)(?=.csv)")
# read in all csv files with `purrr` (such as `map_df`)
# add in filename in df: https://stackoverflow.com/questions/46299777/add-filename-column-to-table-as-multiple-files-are-read-and-bound
# specifically, melt it, insert extracted filename as Subject column
library(purrr)
library(dplyr)
library(tidyr)
library(readr)
# purrr style magic!!
# .x is element in filenames, and .y is element in sites
roi_df <- map2_df(roi_files, fname,
~read_csv(.x) %>%
select(-X1) %>%
gather(key = ROI, value = CBF_value) %>%
mutate(Subject = .y)
)
# remove NAs
roi_df <- na.omit(roi_df)
# visualization
# had some issues with error bars not plotting on each bar but resolved after updating to newest
# https://github.com/kassambara/ggpubr/issues/71
library(ggpubr)
ggbarplot(roi_df, x= "ROI", y = "CBF_value",
add = "mean_se",
fill = "Subject", color = "Subject",
add.params = list(group = "Subject"),
x.text.angle = 45,
position = position_dodge(0.9),
legend = "right", xlab = "ROI Location", ylab = "CBF Value",
title = 'CBF value comparison for 6 roi regions')
ggsave('CBF_value_comparison_6roi.png', width = 8, height = 6)
q()
